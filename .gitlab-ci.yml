cache:
  paths:
    - coverage.tar.gz

nexusLIMS_tests_37:
  stage: test
  script:
    # run tests with coverage and output coverage report to html
    - pipenv run pytest mdcs/nexusLIMS/nexusLIMS/tests --cov=mdcs/nexusLIMS/nexusLIMS --cov-report html:$(pwd)/coverage --cov-report term --mpl --mpl-baseline-path=mdcs/nexusLIMS/nexusLIMS/tests/files/figs
  # Install the environment
  before_script:
    # before anything, try to remove the existing conda environment and replace
    # with gitlab cache, returning true whether or not we succeeded
    - echo "Removing conda environment at ${CONDA_ENV}_37"
    - /opt/conda/bin/conda remove -y -p ${CONDA_ENV}_37 --all || true
    # try to source the unpacked environment, and if we succeeded, continue, if not, create new environment and install pipenv
    - echo "Use conda to install the base python environment so we don't mess with system packages"
    - /opt/conda/bin/conda create -y -p ${CONDA_ENV}_37 python=3.7
    - source /opt/conda/bin/activate ${CONDA_ENV}_37
    - echo "install pipenv to build the actual environment"
    - pip install pipenv
    # try to remove the existing pipenv
    - pipenv --rm || true
    - pipenv install --dev
  after_script:
    # cache the coverage results so they can be published, always returning true
    - tar -czf coverage.tar.gz coverage || true
    - /opt/conda/bin/conda remove -y -p ${CONDA_ENV}_37 --all || true
  artifacts:
    paths:
      - coverage
    expire_in: 30 days

nexusLIMS_tests_38:
  stage: test
  script:
    # run tests with coverage and output coverage report to html
    - pipenv run pytest mdcs/nexusLIMS/nexusLIMS/tests --mpl --mpl-baseline-path=mdcs/nexusLIMS/nexusLIMS/tests/files/figs
  # Install the environment
  before_script:
    # before anything, try to remove the existing conda environment and replace
    # with gitlab cache, returning true whether or not we succeeded
    - echo "Removing conda environment at ${CONDA_ENV}_38"
    - /opt/conda/bin/conda remove -y -p ${CONDA_ENV}_38 --all || true
    # try to source the unpacked environment, and if we succeeded, continue, if not, create new environment and install pipenv
    - echo "Use conda to install the base python environment so we don't mess with system packages"
    - /opt/conda/bin/conda create -y -p ${CONDA_ENV}_38 python=3.8
    - source /opt/conda/bin/activate ${CONDA_ENV}_38
    - echo "install pipenv to build the actual environment"
    - pip install pipenv
    # try to remove the existing pipenv
    - pipenv --rm || true
    - pipenv install --dev
  after_script:
    - /opt/conda/bin/conda remove -y -p ${CONDA_ENV}_38 --all || true

pages:
  stage: deploy
  script:
    - pipenv run python -m sphinx.cmd.build mdcs/nexusLIMS/doc/source public/doc -n -E -a -j auto -b html
  before_script:
    # before anything, remove the existing conda environment and rebuild
    # with gitlab cache, returning true whether or not we succeeded
    - /opt/conda/bin/conda remove -y -p ${CONDA_ENV}_37 --all || true
    - tar -xzf coverage.tar.gz -C public/ || true
    - /opt/conda/bin/conda create -y -p ${CONDA_ENV}_37 python=3.7
    - source /opt/conda/bin/activate ${CONDA_ENV}_37
    - pip install pipenv
    # try to remove the existing pipenv
    - pipenv --rm || true
    - pipenv install --dev
  after_script:
    - /opt/conda/bin/conda remove -y -p ${CONDA_ENV}_37 --all || true
  artifacts:
    paths:
      - public
  dependencies:
    - nexusLIMS_tests_37
