# Cache the conda environment between jobs
variables:
  CONDA_ENV: "/home/gitlab-runner/conda_envs/NexusLIMS_conda_env"

cache:
  paths:
    - .gitlab-cache.tar.gz
    - coverage.tar.gz

nexusLIMS_tests:
  stage: test
  script:
    # run tests with coverage and output coverage report to html
    - pipenv run pytest mdcs/nexusLIMS/nexusLIMS/tests --cov=mdcs/nexusLIMS/nexusLIMS --cov-report html:$(pwd)/coverage --cov-report term --mpl --mpl-baseline-path=mdcs/nexusLIMS/nexusLIMS/tests/files/figs
  # Install the environment
  before_script:
    # before anything, try to remove the existing conda environment and replace
    # with gitlab cache, returning true whether or not we succeeded
    - /opt/conda/bin/conda remove -p ${CONDA_ENV} --all || true
    - tar -xzf .gitlab-cache.tar.gz -C / || true
    # try to source the unpacked environment, and if we succeeded, continue, if not, create new environment and install pipenv
    - source /opt/conda/bin/activate ${CONDA_ENV} && EXITCODE=0 || EXITCODE=$? && true
    # the following syntax allows for multi-line command (using > )
    - >
      if [ ${EXITCODE} -eq 0 ]; then
        # we succeeded, so we don't need to do anything
        :
      else
        # we failed, so install conda environment
        echo "Use conda to install the base python environment so we don't mess with system packages"
        for i in $(seq 1 5); do [ $i -gt 1 ] && echo "Sleeping for 15 seconds..."; sleep 15; /opt/conda/bin/conda create -p ${CONDA_ENV} python=3.7 && s=0 && break || s=$?; done; (exit $s)
      fi
    - source /opt/conda/bin/activate ${CONDA_ENV}
    - echo "install pipenv to build the actual environment"
    - pip install pipenv
    - pipenv install --dev
  after_script:
    # create a cache file of the conda environment, always returning true
    - tar -czf .gitlab-cache.tar.gz ${CONDA_ENV} || true
    - tar -czf coverage.tar.gz coverage || true
  artifacts:
    paths:
      - coverage
    expire_in: 30 days

pages:
  stage: deploy
  script:
    # run twice because for some reason the plantuml documents don't work the first time
    - pipenv run python -m sphinx.cmd.build mdcs/nexusLIMS/doc/source public/doc -n -E -a -j auto -b html
  before_script:
    # before anything, try to remove the existing conda environment and replace
    # with gitlab cache, returning true whether or not we succeeded
    - /opt/conda/bin/conda remove -p ${CONDA_ENV} --all || true
    - tar -xzf .gitlab-cache.tar.gz -C / || true
    - tar -xzf coverage.tar.gz -C public/ || true
    - source /opt/conda/bin/activate ${CONDA_ENV}
    - pip install pipenv
    - pipenv install --dev
  after_script:
    # create a cache file of the conda environment, always returning true
    - tar -czf .gitlab-cache.tar.gz ${CONDA_ENV} || true
  artifacts:
    paths:
      - public
  dependencies:
    - nexusLIMS_tests
