#  NIST Public License - 2019
#
#  This software was developed by employees of the National Institute of
#  Standards and Technology (NIST), an agency of the Federal Government
#  and is being made available as a public service. Pursuant to title 17
#  United States Code Section 105, works of NIST employees are not subject
#  to copyright protection in the United States.  This software may be
#  subject to foreign copyright.  Permission in the United States and in
#  foreign countries, to the extent that NIST may hold copyright, to use,
#  copy, modify, create derivative works, and distribute this software and
#  its documentation without fee is hereby granted on a non-exclusive basis,
#  provided that this notice and disclaimer of warranty appears in all copies.
#
#  THE SOFTWARE IS PROVIDED 'AS IS' WITHOUT ANY WARRANTY OF ANY KIND,
#  EITHER EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING, BUT NOT LIMITED
#  TO, ANY WARRANTY THAT THE SOFTWARE WILL CONFORM TO SPECIFICATIONS, ANY
#  IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE,
#  AND FREEDOM FROM INFRINGEMENT, AND ANY WARRANTY THAT THE DOCUMENTATION
#  WILL CONFORM TO THE SOFTWARE, OR ANY WARRANTY THAT THE SOFTWARE WILL BE
#  ERROR FREE.  IN NO EVENT SHALL NIST BE LIABLE FOR ANY DAMAGES, INCLUDING,
#  BUT NOT LIMITED TO, DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES,
#  ARISING OUT OF, RESULTING FROM, OR IN ANY WAY CONNECTED WITH THIS SOFTWARE,
#  WHETHER OR NOT BASED UPON WARRANTY, CONTRACT, TORT, OR OTHERWISE, WHETHER
#  OR NOT INJURY WAS SUSTAINED BY PERSONS OR PROPERTY OR OTHERWISE, AND
#  WHETHER OR NOT LOSS WAS SUSTAINED FROM, OR AROSE OUT OF THE RESULTS OF,
#  OR USE OF, THE SOFTWARE OR SERVICES PROVIDED HEREUNDER.
#

#############################################################################
# Generated by PAGE version 4.26
#  in conjunction with Tcl version 8.6
#  Dec 04, 2019 03:30:55 PM MST  platform: Linux
set vTcl(timestamp) ""


set image_list { \
    logo_text_250x100_png ../../../../files/logo_text_250x100.png \
}
   vTcl:create_project_images $image_list   ;# In image.tcl


if {!$vTcl(borrow) && !$vTcl(template)} {

set vTcl(actual_gui_font_tooltip_name)  TkDefaultFont
set vTcl(actual_gui_font_treeview_name)  TkDefaultFont
set vTcl(actual_gui_bg) #d9d9d9
set vTcl(actual_gui_fg) #000000
set vTcl(actual_gui_analog) #ececec
set vTcl(actual_gui_menu_analog) #ececec
set vTcl(actual_gui_menu_bg) #d9d9d9
set vTcl(actual_gui_menu_fg) #000000
set vTcl(complement_color) #d9d9d9
set vTcl(analog_color_p) #d9d9d9
set vTcl(analog_color_m) #ececec
set vTcl(active_fg) #000000
set vTcl(actual_gui_menu_active_bg)  #ececec
set vTcl(active_menu_fg) #000000
}




proc vTclWindow.top42 {base} {
    global vTcl
    if {$base == ""} {
        set base .top42
    }
    if {[winfo exists $base]} {
        wm deiconify $base; return
    }
    set top $base
    ###################
    # CREATING WIDGETS
    ###################
    vTcl::widgets::core::toplevel::createCmd $top -class Toplevel \
        -background $vTcl(actual_gui_bg) -highlightcolor black 
    wm focusmodel $top passive
    wm geometry $top 300x450+538+141
    update
    # set in toplevel.wgt.
    global vTcl
    global img_list
    set vTcl(save,dflt,origin) 0
    wm maxsize $top 3840 1170
    wm minsize $top 1 1
    wm overrideredirect $top 0
    wm resizable $top 0 0
    wm deiconify $top
    wm title $top "NexusLIMS Session Logger"
    vTcl:DefineAlias "$top" "Toplevel1" vTcl:Toplevel:WidgetProc "" 1
    ttk::label $top.tLa43 \
        -background $vTcl(actual_gui_bg) -foreground $vTcl(actual_gui_fg) \
        -font {-family {DejaVu Sans} -size 9} -relief flat -text Tlabel \
        -image logo_text_250x100_png 
    vTcl:DefineAlias "$top.tLa43" "TLabel1" vTcl:WidgetProc "Toplevel1" 1
    bind $top.tLa43 <<SetBalloon>> {
        set ::vTcl::balloon::%W {Brought to you by the NIST Office of Data and Informatics}
    }
    ttk::label $top.tLa44 \
        -background $vTcl(actual_gui_bg) -foreground $vTcl(actual_gui_fg) \
        -font TkDefaultFont -relief flat -anchor center -justify center \
        -wraplength 250 -text {A new session has been started for} -width 250 
    vTcl:DefineAlias "$top.tLa44" "TLabel2" vTcl:WidgetProc "Toplevel1" 1
    ttk::style configure TButton -background $vTcl(actual_gui_bg)
    ttk::style configure TButton -foreground $vTcl(actual_gui_fg)
    ttk::style configure TButton -font "$vTcl(actual_gui_font_dft_desc)"
    ttk::button $top.tBu45 \
        -takefocus {} -text {End session} 
    vTcl:DefineAlias "$top.tBu45" "TButton1" vTcl:WidgetProc "Toplevel1" 1
    bind $top.tBu45 <<SetBalloon>> {
        set ::vTcl::balloon::%W {Ending the session will close this window and trigger a record of the session to be built (don't click unless you're sure you've saved all your data!)}
    }
    ttk::label $top.tLa45 \
        -background $vTcl(actual_gui_bg) -foreground #12649b \
        -font TkDefaultFont -relief flat -anchor center -justify center \
        -wraplength 250 -text {$INSTRUMENT} -width 250 -compound center 
    vTcl:DefineAlias "$top.tLa45" "instrument_label" vTcl:WidgetProc "Toplevel1" 1
    ttk::label $top.tLa46 \
        -background $vTcl(actual_gui_bg) -foreground $vTcl(actual_gui_fg) \
        -font TkDefaultFont -relief flat -anchor center -justify center \
        -wraplength 250 -text at -width 250 -compound center 
    vTcl:DefineAlias "$top.tLa46" "TLabel3_2" vTcl:WidgetProc "Toplevel1" 1
    ttk::label $top.tLa47 \
        -background $vTcl(actual_gui_bg) -foreground #12649b \
        -font TkDefaultFont -relief flat -anchor center -justify center \
        -wraplength 250 -text {$DATETIME} -width 250 -compound center 
    vTcl:DefineAlias "$top.tLa47" "datetime_label" vTcl:WidgetProc "Toplevel1" 1
    ttk::label $top.tLa48 \
        -background $vTcl(actual_gui_bg) -foreground $vTcl(actual_gui_fg) \
        -font TkDefaultFont -relief flat -anchor center -justify center \
        -wraplength 250 \
        -text {Leave this window open while you work!\n\nTo end the session (after all data has been saved to the network share), click below or close this window} \
        -width 250 -compound center 
    vTcl:DefineAlias "$top.tLa48" "TLabel3_3" vTcl:WidgetProc "Toplevel1" 1
    ###################
    # SETTING GEOMETRY
    ###################
    place $top.tLa43 \
        -in $top -x 25 -y 25 -width 250 -relwidth 0 -height 100 -relheight 0 \
        -anchor nw -bordermode ignore 
    place $top.tLa44 \
        -in $top -x 25 -y 150 -width 0 -relwidth 0.833 -height 16 \
        -relheight 0 -anchor nw -bordermode ignore 
    place $top.tBu45 \
        -in $top -x 0 -relx 0.333 -y 375 -width 100 -relwidth 0 -height 50 \
        -relheight 0 -anchor nw -bordermode ignore 
    place $top.tLa45 \
        -in $top -x 0 -relx 0.083 -y 180 -width 0 -relwidth 0.833 -height 16 \
        -relheight 0 -anchor nw -bordermode ignore 
    place $top.tLa46 \
        -in $top -x 0 -relx 0.083 -y 210 -width 250 -height 16 -anchor nw \
        -bordermode ignore 
    place $top.tLa47 \
        -in $top -x 0 -relx 0.083 -y 240 -width 250 -height 16 -anchor nw \
        -bordermode ignore 
    place $top.tLa48 \
        -in $top -x 25 -y 270 -width 0 -relwidth 0.833 -height 80 \
        -relheight 0 -anchor nw -bordermode ignore 

    vTcl:FireEvent $base <<Ready>>
}

set btop ""
if {$vTcl(borrow)} {
    set btop .bor[expr int([expr rand() * 100])]
    while {[lsearch $btop $vTcl(tops)] != -1} {
        set btop .bor[expr int([expr rand() * 100])]
    }
}
set vTcl(btop) $btop
Window show .
Window show .top42 $btop
if {$vTcl(borrow)} {
    $btop configure -background plum
}

